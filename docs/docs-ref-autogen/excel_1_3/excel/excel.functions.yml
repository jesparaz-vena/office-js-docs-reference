### YamlMime:TSType
name: Excel.Functions
uid: 'excel!Excel.Functions:class'
package: excel!
fullName: Excel.Functions
summary: An object for evaluating Excel functions.
remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'

isPreview: false
isDeprecated: false
type: class
properties:
  - name: context
    uid: 'excel!Excel.Functions#context:member'
    package: excel!
    fullName: context
    summary: >-
      The request context associated with the object. This connects the add-in's process to the Office host
      application's process.
    remarks: ''
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'context: RequestContext;'
      return:
        type: '<xref uid="excel!Excel.RequestContext:class" />'
methods:
  - name: abs(number)
    uid: 'excel!Excel.Functions#abs:member(1)'
    package: excel!
    fullName: abs(number)
    summary: 'Returns the absolute value of a number, a number without its sign.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abs(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the real number for which you want the absolute value.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'accrInt(issue, firstInterest, settlement, rate, par, frequency, basis, calcMethod)'
    uid: 'excel!Excel.Functions#accrInt:member(1)'
    package: excel!
    fullName: 'accrInt(issue, firstInterest, settlement, rate, par, frequency, basis, calcMethod)'
    summary: Returns the accrued interest for a security that pays periodic interest.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        accrInt(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstInterest: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, calcMethod?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstInterest
          description: 'Is the security''s first interest date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: par
          description: Is the security's par value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: calcMethod
          description: >-
            Is a logical value: to accrued interest from issue date = TRUE or omitted; to calculate from last coupon
            payment date = FALSE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'accrIntM(issue, settlement, rate, par, basis)'
    uid: 'excel!Excel.Functions#accrIntM:member(1)'
    package: excel!
    fullName: 'accrIntM(issue, settlement, rate, par, basis)'
    summary: Returns the accrued interest for a security that pays interest at maturity.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        accrIntM(issue: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, par: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: issue
          description: 'Is the security''s issue date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: settlement
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: par
          description: Is the security's par value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acos(number)
    uid: 'excel!Excel.Functions#acos:member(1)'
    package: excel!
    fullName: acos(number)
    summary: >-
      Returns the arccosine of a number, in radians in the range 0 to Pi. The arccosine is the angle whose cosine is
      Number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the cosine of the angle you want and must be from -1 to 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acosh(number)
    uid: 'excel!Excel.Functions#acosh:member(1)'
    package: excel!
    fullName: acosh(number)
    summary: Returns the inverse hyperbolic cosine of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acot(number)
    uid: 'excel!Excel.Functions#acot:member(1)'
    package: excel!
    fullName: acot(number)
    summary: 'Returns the arccotangent of a number, in radians in the range 0 to Pi.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the cotangent of the angle you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: acoth(number)
    uid: 'excel!Excel.Functions#acoth:member(1)'
    package: excel!
    fullName: acoth(number)
    summary: Returns the inverse hyperbolic cotangent of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acoth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the hyperbolic cotangent of the angle that you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'amorDegrc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    uid: 'excel!Excel.Functions#amorDegrc:member(1)'
    package: excel!
    fullName: 'amorDegrc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    summary: Returns the prorated linear depreciation of an asset for each accounting period.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        amorDegrc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: datePurchased
          description: Is the date the asset is purchased.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the rate of depreciation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: 'Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'amorLinc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    uid: 'excel!Excel.Functions#amorLinc:member(1)'
    package: excel!
    fullName: 'amorLinc(cost, datePurchased, firstPeriod, salvage, period, rate, basis)'
    summary: Returns the prorated linear depreciation of an asset for each accounting period.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        amorLinc(cost: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        datePurchased: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        firstPeriod: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        salvage: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, period:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, rate: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the cost of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: datePurchased
          description: Is the date the asset is purchased.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: firstPeriod
          description: Is the date of the end of the first period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of life of the asset.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: rate
          description: Is the rate of depreciation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: 'Year\_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365 days.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: and(values)
    uid: 'excel!Excel.Functions#and:member(1)'
    package: excel!
    fullName: and(values)
    summary: 'Checks whether all arguments are TRUE, and returns TRUE if all arguments are TRUE.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        and(...values: Array<boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<boolean>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 conditions you want to test that can be either TRUE or FALSE
            and can be logical values, arrays, or references.
          type: >-
            Array&lt;boolean | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;boolean&gt;'
        description: ''
  - name: arabic(text)
    uid: 'excel!Excel.Functions#arabic:member(1)'
    package: excel!
    fullName: arabic(text)
    summary: Converts a Roman numeral to Arabic.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'arabic(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: text
          description: Is the Roman numeral you want to convert.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: areas(reference)
    uid: 'excel!Excel.Functions#areas:member(1)'
    package: excel!
    fullName: areas(reference)
    summary: Returns the number of areas in a reference. An area is a range of contiguous cells or a single cell.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'areas(reference: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: reference
          description: Is a reference to a cell or range of cells and can refer to multiple areas.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: asc(text)
    uid: 'excel!Excel.Functions#asc:member(1)'
    package: excel!
    fullName: asc(text)
    summary: >-
      Changes full-width (double-byte) characters to half-width (single-byte) characters. Use with double-byte character
      sets (DBCS).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'asc(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: asin(number)
    uid: 'excel!Excel.Functions#asin:member(1)'
    package: excel!
    fullName: asin(number)
    summary: 'Returns the arcsine of a number in radians, in the range -Pi/2 to Pi/2.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'asin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the sine of the angle you want and must be from -1 to 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: asinh(number)
    uid: 'excel!Excel.Functions#asinh:member(1)'
    package: excel!
    fullName: asinh(number)
    summary: Returns the inverse hyperbolic sine of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'asinh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is any real number equal to or greater than 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: atan(number)
    uid: 'excel!Excel.Functions#atan:member(1)'
    package: excel!
    fullName: atan(number)
    summary: 'Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'atan(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the tangent of the angle you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'atan2(xNum, yNum)'
    uid: 'excel!Excel.Functions#atan2:member(1)'
    package: excel!
    fullName: 'atan2(xNum, yNum)'
    summary: 'Returns the arctangent of the specified x- and y- coordinates, in radians between -Pi and Pi, excluding -Pi.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        atan2(xNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yNum: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: xNum
          description: Is the x-coordinate of the point.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yNum
          description: Is the y-coordinate of the point.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: atanh(number)
    uid: 'excel!Excel.Functions#atanh:member(1)'
    package: excel!
    fullName: atanh(number)
    summary: Returns the inverse hyperbolic tangent of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'atanh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is any real number between -1 and 1 excluding -1 and 1.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: aveDev(values)
    uid: 'excel!Excel.Functions#aveDev:member(1)'
    package: excel!
    fullName: aveDev(values)
    summary: >-
      Returns the average of the absolute deviations of data points from their mean. Arguments can be numbers or names,
      arrays, or references that contain numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        aveDev(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments for which you want the average of the absolute
            deviations.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: average(values)
    uid: 'excel!Excel.Functions#average:member(1)'
    package: excel!
    fullName: average(values)
    summary: >-
      Returns the average (arithmetic mean) of its arguments, which can be numbers or names, arrays, or references that
      contain numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        average(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 numeric arguments for which you want the average.'
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: averageA(values)
    uid: 'excel!Excel.Functions#averageA:member(1)'
    package: excel!
    fullName: averageA(values)
    summary: >-
      Returns the average (arithmetic mean) of its arguments, evaluating text and FALSE in arguments as 0; TRUE
      evaluates as 1. Arguments can be numbers, names, arrays, or references.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: 'List of parameters, whose elements are 1 to 255 arguments for which you want the average.'
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'averageIf(range, criteria, averageRange)'
    uid: 'excel!Excel.Functions#averageIf:member(1)'
    package: excel!
    fullName: 'averageIf(range, criteria, averageRange)'
    summary: Finds average(arithmetic mean) for the cells specified by a given condition or criteria.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, averageRange?: Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range of cells you want evaluated.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the condition or criteria in the form of a number, expression, or text that defines which cells will be
            used to find the average.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: averageRange
          description: 'Are the actual cells to be used to find the average. If omitted, the cells in range are used.'
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'averageIfs(averageRange, values)'
    uid: 'excel!Excel.Functions#averageIfs:member(1)'
    package: excel!
    fullName: 'averageIfs(averageRange, values)'
    summary: Finds average(arithmetic mean) for the cells specified by a given set of conditions or criteria.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        averageIfs(averageRange: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values:
        Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string | boolean>):
        FunctionResult<number>;
      parameters:
        - id: averageRange
          description: Are the actual cells to be used to find the average.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for
            the particular condition , and the second element is is the condition or criteria in the form of a number,
            expression, or text that defines which cells will be used to find the average.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt; | number | string | boolean&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: bahtText(number)
    uid: 'excel!Excel.Functions#bahtText:member(1)'
    package: excel!
    fullName: bahtText(number)
    summary: Converts a number to text (baht).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bahtText(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<string>;
      parameters:
        - id: number
          description: Is a number that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'base(number, radix, minLength)'
    uid: 'excel!Excel.Functions#base:member(1)'
    package: excel!
    fullName: 'base(number, radix, minLength)'
    summary: Converts a number into a text representation with the given radix (base).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        base(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, minLength?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: radix
          description: Is the base Radix that you want to convert the number into.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: minLength
          description: Is the minimum length of the returned string. If omitted leading zeros are not added.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'besselI(x, n)'
    uid: 'excel!Excel.Functions#besselI:member(1)'
    package: excel!
    fullName: 'besselI(x, n)'
    summary: Returns the modified Bessel function In(x).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselI(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the Bessel function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselJ(x, n)'
    uid: 'excel!Excel.Functions#besselJ:member(1)'
    package: excel!
    fullName: 'besselJ(x, n)'
    summary: Returns the Bessel function Jn(x).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselJ(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the Bessel function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselK(x, n)'
    uid: 'excel!Excel.Functions#besselK:member(1)'
    package: excel!
    fullName: 'besselK(x, n)'
    summary: Returns the modified Bessel function Kn(x).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselK(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'besselY(x, n)'
    uid: 'excel!Excel.Functions#besselY:member(1)'
    package: excel!
    fullName: 'besselY(x, n)'
    summary: Returns the Bessel function Yn(x).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        besselY(x: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, n: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value at which to evaluate the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: 'n'
          description: Is the order of the function.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'beta_Dist(x, alpha, beta, cumulative, A, B)'
    uid: 'excel!Excel.Functions#beta_Dist:member(1)'
    package: excel!
    fullName: 'beta_Dist(x, alpha, beta, cumulative, A, B)'
    summary: Returns the beta probability distribution function.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        beta_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, B?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: Is the value between A and B at which to evaluate the function.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability density
            function, use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'beta_Inv(probability, alpha, beta, A, B)'
    uid: 'excel!Excel.Functions#beta_Inv:member(1)'
    package: excel!
    fullName: 'beta_Inv(probability, alpha, beta, A, B)'
    summary: Returns the inverse of the cumulative beta probability density function (BETA.DIST).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        beta_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, beta: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, A?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, B?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: probability
          description: Is a probability associated with the beta distribution.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: beta
          description: Is a parameter to the distribution and must be greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: A
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: B
          description: 'Is an optional upper bound to the interval of x. If omitted, B = 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: bin2Dec(number)
    uid: 'excel!Excel.Functions#bin2Dec:member(1)'
    package: excel!
    fullName: bin2Dec(number)
    summary: Converts a binary number to decimal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Dec(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bin2Hex(number, places)'
    uid: 'excel!Excel.Functions#bin2Hex:member(1)'
    package: excel!
    fullName: 'bin2Hex(number, places)'
    summary: Converts a binary number to hexadecimal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bin2Oct(number, places)'
    uid: 'excel!Excel.Functions#bin2Oct:member(1)'
    package: excel!
    fullName: 'bin2Oct(number, places)'
    summary: Converts a binary number to octal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bin2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the binary number you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Dist_Range(trials, probabilityS, numberS, numberS2)'
    uid: 'excel!Excel.Functions#binom_Dist_Range:member(1)'
    package: excel!
    fullName: 'binom_Dist_Range(trials, probabilityS, numberS, numberS2)'
    summary: Returns the probability of a trial result using a binomial distribution.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Dist_Range(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, numberS2?: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: trials
          description: Is the number of independent trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: Is the probability of success on each trial.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberS
          description: Is the number of successes in trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberS2
          description: >-
            If provided this function returns the probability that the number of successful trials shall lie between
            numberS and numberS2.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Dist(numberS, trials, probabilityS, cumulative)'
    uid: 'excel!Excel.Functions#binom_Dist:member(1)'
    package: excel!
    fullName: 'binom_Dist(numberS, trials, probabilityS, cumulative)'
    summary: Returns the individual term binomial distribution probability.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Dist(numberS: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, trials: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: numberS
          description: Is the number of successes in trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: trials
          description: Is the number of independent trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: Is the probability of success on each trial.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value: for the cumulative distribution function, use TRUE; for the probability mass function,
            use FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'binom_Inv(trials, probabilityS, alpha)'
    uid: 'excel!Excel.Functions#binom_Inv:member(1)'
    package: excel!
    fullName: 'binom_Inv(trials, probabilityS, alpha)'
    summary: >-
      Returns the smallest value for which the cumulative binomial distribution is greater than or equal to a criterion
      value.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        binom_Inv(trials: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, probabilityS: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, alpha: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: trials
          description: Is the number of Bernoulli trials.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: probabilityS
          description: 'Is the probability of success on each trial, a number between 0 and 1 inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: alpha
          description: 'Is the criterion value, a number between 0 and 1 inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitand(number1, number2)'
    uid: 'excel!Excel.Functions#bitand:member(1)'
    package: excel!
    fullName: 'bitand(number1, number2)'
    summary: Returns a bitwise 'And' of two numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitand(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitlshift(number, shiftAmount)'
    uid: 'excel!Excel.Functions#bitlshift:member(1)'
    package: excel!
    fullName: 'bitlshift(number, shiftAmount)'
    summary: Returns a number shifted left by shift\_amount bits.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitlshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number left by.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitor(number1, number2)'
    uid: 'excel!Excel.Functions#bitor:member(1)'
    package: excel!
    fullName: 'bitor(number1, number2)'
    summary: Returns a bitwise 'Or' of two numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitrshift(number, shiftAmount)'
    uid: 'excel!Excel.Functions#bitrshift:member(1)'
    package: excel!
    fullName: 'bitrshift(number, shiftAmount)'
    summary: Returns a number shifted right by shift\_amount bits.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitrshift(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, shiftAmount: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: shiftAmount
          description: Is the number of bits that you want to shift Number right by.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'bitxor(number1, number2)'
    uid: 'excel!Excel.Functions#bitxor:member(1)'
    package: excel!
    fullName: 'bitxor(number1, number2)'
    summary: Returns a bitwise 'Exclusive Or' of two numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        bitxor(number1: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, number2: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number1
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: Is the decimal representation of the binary number you want to evaluate.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ceiling_Math(number, significance, mode)'
    uid: 'excel!Excel.Functions#ceiling_Math:member(1)'
    package: excel!
    fullName: 'ceiling_Math(number, significance, mode)'
    summary: 'Rounds a number up, to the nearest integer or to the nearest multiple of significance.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ceiling_Math(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, mode?: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: mode
          description: When given and nonzero this function will round away from zero.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ceiling_Precise(number, significance)'
    uid: 'excel!Excel.Functions#ceiling_Precise:member(1)'
    package: excel!
    fullName: 'ceiling_Precise(number, significance)'
    summary: 'Rounds a number up, to the nearest integer or to the nearest multiple of significance.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ceiling_Precise(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance?:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: char(number)
    uid: 'excel!Excel.Functions#char:member(1)'
    package: excel!
    fullName: char(number)
    summary: Returns the character specified by the code number from the character set for your computer.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'char(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      parameters:
        - id: number
          description: Is a number between 1 and 255 specifying which character you want.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'chiSq_Dist_RT(x, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Dist_RT:member(1)'
    package: excel!
    fullName: 'chiSq_Dist_RT(x, degFreedom)'
    summary: Returns the right-tailed probability of the chi-squared distribution.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Dist_RT(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: 'Is the value at which you want to evaluate the distribution, a nonnegative number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Dist(x, degFreedom, cumulative)'
    uid: 'excel!Excel.Functions#chiSq_Dist:member(1)'
    package: excel!
    fullName: 'chiSq_Dist(x, degFreedom, cumulative)'
    summary: Returns the left-tailed probability of the chi-squared distribution.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Dist(x: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, cumulative: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: x
          description: 'Is the value at which you want to evaluate the distribution, a nonnegative number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: cumulative
          description: >-
            Is a logical value for the function to return: the cumulative distribution function = TRUE; the probability
            density function = FALSE.
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Inv_RT(probability, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Inv_RT:member(1)'
    package: excel!
    fullName: 'chiSq_Inv_RT(probability, degFreedom)'
    summary: Returns the inverse of the right-tailed probability of the chi-squared distribution.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Inv_RT(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: probability
          description: 'Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'chiSq_Inv(probability, degFreedom)'
    uid: 'excel!Excel.Functions#chiSq_Inv:member(1)'
    package: excel!
    fullName: 'chiSq_Inv(probability, degFreedom)'
    summary: Returns the inverse of the left-tailed probability of the chi-squared distribution.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        chiSq_Inv(probability: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, degFreedom:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: probability
          description: 'Is a probability associated with the chi-squared distribution, a value between 0 and 1 inclusive.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: degFreedom
          description: 'Is the number of degrees of freedom, a number between 1 and 10^10, excluding 10^10.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'choose(indexNum, values)'
    uid: 'excel!Excel.Functions#choose:member(1)'
    package: excel!
    fullName: 'choose(indexNum, values)'
    summary: 'Chooses a value or action to perform from a list of values, based on an index number.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        choose(indexNum: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, ...values:
        Array<Excel.Range | number | string | boolean | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number | string | boolean>;
      parameters:
        - id: indexNum
          description: >-
            Specifies which value argument is selected. indexNum must be between 1 and 254, or a formula or a reference
            to a number between 1 and 254.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 254 numbers, cell references, defined names, formulas,
            functions, or text arguments from which CHOOSE selects.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | number | string | boolean | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class"
            />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number | string | boolean&gt;'
        description: ''
  - name: clean(text)
    uid: 'excel!Excel.Functions#clean:member(1)'
    package: excel!
    fullName: clean(text)
    summary: Removes all nonprintable characters from text.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'clean(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      parameters:
        - id: text
          description: Is any worksheet information from which you want to remove nonprintable characters.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: code(text)
    uid: 'excel!Excel.Functions#code:member(1)'
    package: excel!
    fullName: code(text)
    summary: 'Returns a numeric code for the first character in a text string, in the character set used by your computer.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'code(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: text
          description: Is the text for which you want the code of the first character.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: columns(array)
    uid: 'excel!Excel.Functions#columns:member(1)'
    package: excel!
    fullName: columns(array)
    summary: Returns the number of columns in an array or reference.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'columns(array: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: array
          description: 'Is an array or array formula, or a reference to a range of cells for which you want the number of columns.'
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'combin(number, numberChosen)'
    uid: 'excel!Excel.Functions#combin:member(1)'
    package: excel!
    fullName: 'combin(number, numberChosen)'
    summary: Returns the number of combinations for a given number of items.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        combin(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of items.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of items in each combination.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'combina(number, numberChosen)'
    uid: 'excel!Excel.Functions#combina:member(1)'
    package: excel!
    fullName: 'combina(number, numberChosen)'
    summary: Returns the number of combinations with repetitions for a given number of items.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        combina(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, numberChosen: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the total number of items.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: numberChosen
          description: Is the number of items in each combination.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'complex(realNum, iNum, suffix)'
    uid: 'excel!Excel.Functions#complex:member(1)'
    package: excel!
    fullName: 'complex(realNum, iNum, suffix)'
    summary: Converts real and imaginary coefficients into a complex number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        complex(realNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        iNum: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, suffix?:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: realNum
          description: Is the real coefficient of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: iNum
          description: Is the imaginary coefficient of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: suffix
          description: Is the suffix for the imaginary component of the complex number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: concatenate(values)
    uid: 'excel!Excel.Functions#concatenate:member(1)'
    package: excel!
    fullName: concatenate(values)
    summary: Joins several text strings into one text string.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        concatenate(...values: Array<string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<string>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 text strings to be joined into a single text string and can
            be text strings, numbers, or single-cell references.
          type: >-
            Array&lt;string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'confidence_Norm(alpha, standardDev, size)'
    uid: 'excel!Excel.Functions#confidence_Norm:member(1)'
    package: excel!
    fullName: 'confidence_Norm(alpha, standardDev, size)'
    summary: 'Returns the confidence interval for a population mean, using a normal distribution.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        confidence_Norm(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: alpha
          description: 'Is the significance level used to compute the confidence level, a number greater than 0 and less than 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is assumed to be known. standardDev must be
            greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: size
          description: Is the sample size.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'confidence_T(alpha, standardDev, size)'
    uid: 'excel!Excel.Functions#confidence_T:member(1)'
    package: excel!
    fullName: 'confidence_T(alpha, standardDev, size)'
    summary: 'Returns the confidence interval for a population mean, using a Student''s T distribution.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        confidence_T(alpha: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, standardDev: number
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, size: number | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: alpha
          description: 'Is the significance level used to compute the confidence level, a number greater than 0 and less than 1.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: standardDev
          description: >-
            Is the population standard deviation for the data range and is assumed to be known. standardDev must be
            greater than 0.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: size
          description: Is the sample size.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'convert(number, fromUnit, toUnit)'
    uid: 'excel!Excel.Functions#convert:member(1)'
    package: excel!
    fullName: 'convert(number, fromUnit, toUnit)'
    summary: Converts a number from one measurement system to another.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        convert(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        fromUnit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, toUnit:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value in from\_units to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fromUnit
          description: Is the units for number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: toUnit
          description: Is the units for the result.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cos(number)
    uid: 'excel!Excel.Functions#cos:member(1)'
    package: excel!
    fullName: cos(number)
    summary: Returns the cosine of an angle.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cos(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosine.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cosh(number)
    uid: 'excel!Excel.Functions#cosh:member(1)'
    package: excel!
    fullName: cosh(number)
    summary: Returns the hyperbolic cosine of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cosh(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is any real number.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: cot(number)
    uid: 'excel!Excel.Functions#cot:member(1)'
    package: excel!
    fullName: cot(number)
    summary: Returns the cotangent of an angle.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'cot(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cotangent.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: coth(number)
    uid: 'excel!Excel.Functions#coth:member(1)'
    package: excel!
    fullName: coth(number)
    summary: Returns the hyperbolic cotangent of a number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'coth(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cotangent.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: count(values)
    uid: 'excel!Excel.Functions#count:member(1)'
    package: excel!
    fullName: count(values)
    summary: Counts the number of cells in a range that contain numbers.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        count(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments that can contain or refer to a variety of
            different types of data, but only numbers are counted.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countA(values)
    uid: 'excel!Excel.Functions#countA:member(1)'
    package: excel!
    fullName: countA(values)
    summary: Counts the number of cells in a range that are not empty.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countA(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments representing the values and cells you want to
            count. Values can be any type of information.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countBlank(range)
    uid: 'excel!Excel.Functions#countBlank:member(1)'
    package: excel!
    fullName: countBlank(range)
    summary: Counts the number of empty cells in a specified range of cells.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'countBlank(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: range
          description: Is the range from which you want to count the empty cells.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'countIf(range, criteria)'
    uid: 'excel!Excel.Functions#countIf:member(1)'
    package: excel!
    fullName: 'countIf(range, criteria)'
    summary: Counts the number of cells within a range that meet the given condition.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countIf(range: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: range
          description: Is the range of cells from which you want to count nonblank cells.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: 'Is the condition in the form of a number, expression, or text that defines which cells will be counted.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: countIfs(values)
    uid: 'excel!Excel.Functions#countIfs:member(1)'
    package: excel!
    fullName: countIfs(values)
    summary: Counts the number of cells specified by a given set of conditions or criteria.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        countIfs(...values: Array<Excel.Range | Excel.RangeReference | Excel.FunctionResult<any> | number | string |
        boolean>): FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, where the first element of each pair is the Is the range of cells you want evaluated for
            the particular condition , and the second element is is the condition in the form of a number, expression,
            or text that defines which cells will be counted.
          type: >-
            Array&lt;<xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt; | number | string | boolean&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDayBs(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDayBs:member(1)'
    package: excel!
    fullName: 'coupDayBs(settlement, maturity, frequency, basis)'
    summary: Returns the number of days from the beginning of the coupon period to the settlement date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDayBs(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDays(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDays:member(1)'
    package: excel!
    fullName: 'coupDays(settlement, maturity, frequency, basis)'
    summary: Returns the number of days in the coupon period that contains the settlement date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDays(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupDaysNc(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupDaysNc:member(1)'
    package: excel!
    fullName: 'coupDaysNc(settlement, maturity, frequency, basis)'
    summary: Returns the number of days from the settlement date to the next coupon date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupDaysNc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, maturity: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, frequency: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, basis?: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupNcd(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupNcd:member(1)'
    package: excel!
    fullName: 'coupNcd(settlement, maturity, frequency, basis)'
    summary: Returns the next coupon date after the settlement date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupNcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupNum(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupNum:member(1)'
    package: excel!
    fullName: 'coupNum(settlement, maturity, frequency, basis)'
    summary: Returns the number of coupons payable between the settlement date and maturity date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupNum(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'coupPcd(settlement, maturity, frequency, basis)'
    uid: 'excel!Excel.Functions#coupPcd:member(1)'
    package: excel!
    fullName: 'coupPcd(settlement, maturity, frequency, basis)'
    summary: Returns the previous coupon date before the settlement date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        coupPcd(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number |
        string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: csc(number)
    uid: 'excel!Excel.Functions#csc:member(1)'
    package: excel!
    fullName: csc(number)
    summary: Returns the cosecant of an angle.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'csc(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the angle in radians for which you want the cosecant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: csch(number)
    uid: 'excel!Excel.Functions#csch:member(1)'
    package: excel!
    fullName: csch(number)
    summary: Returns the hyperbolic cosecant of an angle.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'csch(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: number
          description: Is the angle in radians for which you want the hyperbolic cosecant.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'cumIPmt(rate, nper, pv, startPeriod, endPeriod, type)'
    uid: 'excel!Excel.Functions#cumIPmt:member(1)'
    package: excel!
    fullName: 'cumIPmt(rate, nper, pv, startPeriod, endPeriod, type)'
    summary: Returns the cumulative interest paid between two periods.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cumIPmt(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startPeriod
          description: Is the first period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endPeriod
          description: Is the last period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: Is the timing of the payment.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'cumPrinc(rate, nper, pv, startPeriod, endPeriod, type)'
    uid: 'excel!Excel.Functions#cumPrinc:member(1)'
    package: excel!
    fullName: 'cumPrinc(rate, nper, pv, startPeriod, endPeriod, type)'
    summary: Returns the cumulative principal paid on a loan between two periods.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        cumPrinc(rate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, nper:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pv: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startPeriod: number | string |
        boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endPeriod: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, type: number | string | boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: rate
          description: Is the interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: nper
          description: Is the total number of payment periods.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pv
          description: Is the present value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startPeriod
          description: Is the first period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endPeriod
          description: Is the last period in the calculation.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: type
          description: Is the timing of the payment.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'date(year, month, day)'
    uid: 'excel!Excel.Functions#date:member(1)'
    package: excel!
    fullName: 'date(year, month, day)'
    summary: Returns the number that represents the date in Microsoft Excel date-time code.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        date(year: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, month: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, day: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: year
          description: Is a number from 1900 or 1904 (depending on the workbook's date system) to 9999.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: month
          description: Is a number from 1 to 12 representing the month of the year.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: day
          description: Is a number from 1 to 31 representing the day of the month.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: datevalue(dateText)
    uid: 'excel!Excel.Functions#datevalue:member(1)'
    package: excel!
    fullName: datevalue(dateText)
    summary: Converts a date in the form of text to a number that represents the date in Microsoft Excel date-time code.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        datevalue(dateText: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: dateText
          description: >-
            Is text that represents a date in a Microsoft Excel date format, between 1/1/1900 or 1/1/1904 (depending on
            the workbook's date system) and 12/31/9999.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'daverage(database, field, criteria)'
    uid: 'excel!Excel.Functions#daverage:member(1)'
    package: excel!
    fullName: 'daverage(database, field, criteria)'
    summary: Averages the values in a column in a list or database that match conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        daverage(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: day(serialNumber)
    uid: 'excel!Excel.Functions#day:member(1)'
    package: excel!
    fullName: day(serialNumber)
    summary: 'Returns the day of the month, a number from 1 to 31.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        day(serialNumber: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: serialNumber
          description: Is a number in the date-time code used by Microsoft Excel.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'days(endDate, startDate)'
    uid: 'excel!Excel.Functions#days:member(1)'
    package: excel!
    fullName: 'days(endDate, startDate)'
    summary: Returns the number of days between the two dates.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        days(endDate: string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, startDate:
        string | number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: endDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: startDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type: >-
            string | number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'days360(startDate, endDate, method)'
    uid: 'excel!Excel.Functions#days360:member(1)'
    package: excel!
    fullName: 'days360(startDate, endDate, method)'
    summary: Returns the number of days between two dates based on a 360-day year (twelve 30-day months).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        days360(startDate: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, endDate: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, method?: boolean | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: startDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: endDate
          description: startDate and endDate are the two dates between which you want to know the number of days.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: method
          description: 'Is a logical value specifying the calculation method: U.S. (NASD) = FALSE or omitted; European = TRUE.'
          type: >-
            boolean | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'db(cost, salvage, life, period, month)'
    uid: 'excel!Excel.Functions#db:member(1)'
    package: excel!
    fullName: 'db(cost, salvage, life, period, month)'
    summary: Returns the depreciation of an asset for a specified period using the fixed-declining balance method.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        db(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        month?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period for which you want to calculate the depreciation. Period must use the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: month
          description: 'Is the number of months in the first year. If month is omitted, it is assumed to be 12.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: dbcs(text)
    uid: 'excel!Excel.Functions#dbcs:member(1)'
    package: excel!
    fullName: dbcs(text)
    summary: >-
      Changes half-width (single-byte) characters within a character string to full-width (double-byte) characters. Use
      with double-byte character sets (DBCS).
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dbcs(text: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;'
      parameters:
        - id: text
          description: 'Is a text, or a reference to a cell containing a text.'
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'dcount(database, field, criteria)'
    uid: 'excel!Excel.Functions#dcount:member(1)'
    package: excel!
    fullName: 'dcount(database, field, criteria)'
    summary: >-
      Counts the cells containing numbers in the field (column) of records in the database that match the conditions you
      specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dcount(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dcountA(database, field, criteria)'
    uid: 'excel!Excel.Functions#dcountA:member(1)'
    package: excel!
    fullName: 'dcountA(database, field, criteria)'
    summary: Counts nonblank cells in the field (column) of records in the database that match the conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dcountA(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ddb(cost, salvage, life, period, factor)'
    uid: 'excel!Excel.Functions#ddb:member(1)'
    package: excel!
    fullName: 'ddb(cost, salvage, life, period, factor)'
    summary: >-
      Returns the depreciation of an asset for a specified period using the double-declining balance method or some
      other method you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ddb(cost: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, salvage: number | Excel.Range
        | Excel.RangeReference | Excel.FunctionResult<any>, life: number | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, period: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        factor?: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: cost
          description: Is the initial cost of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: salvage
          description: Is the salvage value at the end of the life of the asset.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: life
          description: >-
            Is the number of periods over which the asset is being depreciated (sometimes called the useful life of the
            asset).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: period
          description: Is the period for which you want to calculate the depreciation. Period must use the same units as Life.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: factor
          description: >-
            Is the rate at which the balance declines. If Factor is omitted, it is assumed to be 2 (the double-declining
            balance method).
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Bin(number, places)'
    uid: 'excel!Excel.Functions#dec2Bin:member(1)'
    package: excel!
    fullName: 'dec2Bin(number, places)'
    summary: Converts a decimal number to binary.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Bin(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Hex(number, places)'
    uid: 'excel!Excel.Functions#dec2Hex:member(1)'
    package: excel!
    fullName: 'dec2Hex(number, places)'
    summary: Converts a decimal number to hexadecimal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Hex(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dec2Oct(number, places)'
    uid: 'excel!Excel.Functions#dec2Oct:member(1)'
    package: excel!
    fullName: 'dec2Oct(number, places)'
    summary: Converts a decimal number to octal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dec2Oct(number: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        places?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number
          description: Is the decimal integer you want to convert.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: places
          description: Is the number of characters to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'decimal(number, radix)'
    uid: 'excel!Excel.Functions#decimal:member(1)'
    package: excel!
    fullName: 'decimal(number, radix)'
    summary: Converts a text representation of a number in a given base into a decimal number.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        decimal(number: string | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, radix: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the number that you want to convert.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: radix
          description: Is the base Radix of the number you are converting.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: degrees(angle)
    uid: 'excel!Excel.Functions#degrees:member(1)'
    package: excel!
    fullName: degrees(angle)
    summary: Converts radians to degrees.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'degrees(angle: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;'
      parameters:
        - id: angle
          description: Is the angle in radians that you want to convert.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'delta(number1, number2)'
    uid: 'excel!Excel.Functions#delta:member(1)'
    package: excel!
    fullName: 'delta(number1, number2)'
    summary: Tests whether two numbers are equal.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        delta(number1: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        number2?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: number1
          description: Is the first number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: number2
          description: Is the second number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: devSq(values)
    uid: 'excel!Excel.Functions#devSq:member(1)'
    package: excel!
    fullName: devSq(values)
    summary: Returns the sum of squares of deviations of data points from their sample mean.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        devSq(...values: Array<number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>>):
        FunctionResult<number>;
      parameters:
        - id: values
          description: >-
            List of parameters, whose elements are 1 to 255 arguments, or an array or array reference, on which you want
            DEVSQ to calculate.
          type: >-
            Array&lt;number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dget(database, field, criteria)'
    uid: 'excel!Excel.Functions#dget:member(1)'
    package: excel!
    fullName: 'dget(database, field, criteria)'
    summary: Extracts from a database a single record that matches the conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dget(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number | boolean | string>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number | boolean | string&gt;'
        description: ''
  - name: 'disc(settlement, maturity, pr, redemption, basis)'
    uid: 'excel!Excel.Functions#disc:member(1)'
    package: excel!
    fullName: 'disc(settlement, maturity, pr, redemption, basis)'
    summary: Returns the discount rate for a security.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        disc(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, pr: number
        | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, redemption: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: pr
          description: Is the security's price per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: redemption
          description: Is the security's redemption value per $100 face value.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dmax(database, field, criteria)'
    uid: 'excel!Excel.Functions#dmax:member(1)'
    package: excel!
    fullName: 'dmax(database, field, criteria)'
    summary: Returns the largest number in the field (column) of records in the database that match the conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dmax(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dmin(database, field, criteria)'
    uid: 'excel!Excel.Functions#dmin:member(1)'
    package: excel!
    fullName: 'dmin(database, field, criteria)'
    summary: >-
      Returns the smallest number in the field (column) of records in the database that match the conditions you
      specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dmin(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dollar(number, decimals)'
    uid: 'excel!Excel.Functions#dollar:member(1)'
    package: excel!
    fullName: 'dollar(number, decimals)'
    summary: 'Converts a number to text, using currency format.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollar(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, decimals?: number |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<string>;
      parameters:
        - id: number
          description: 'Is a number, a reference to a cell containing a number, or a formula that evaluates to a number.'
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: decimals
          description: >-
            Is the number of digits to the right of the decimal point. The number is rounded as necessary; if omitted,
            Decimals = 2.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;string&gt;'
        description: ''
  - name: 'dollarDe(fractionalDollar, fraction)'
    uid: 'excel!Excel.Functions#dollarDe:member(1)'
    package: excel!
    fullName: 'dollarDe(fractionalDollar, fraction)'
    summary: 'Converts a dollar price, expressed as a fraction, into a dollar price, expressed as a decimal number.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollarDe(fractionalDollar: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: fractionalDollar
          description: Is a number expressed as a fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fraction
          description: Is the integer to use in the denominator of the fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dollarFr(decimalDollar, fraction)'
    uid: 'excel!Excel.Functions#dollarFr:member(1)'
    package: excel!
    fullName: 'dollarFr(decimalDollar, fraction)'
    summary: 'Converts a dollar price, expressed as a decimal number, into a dollar price, expressed as a fraction.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dollarFr(decimalDollar: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>, fraction: number | string | boolean | Excel.Range | Excel.RangeReference |
        Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: decimalDollar
          description: Is a decimal number.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: fraction
          description: Is the integer to use in the denominator of a fraction.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dproduct(database, field, criteria)'
    uid: 'excel!Excel.Functions#dproduct:member(1)'
    package: excel!
    fullName: 'dproduct(database, field, criteria)'
    summary: Multiplies the values in the field (column) of records in the database that match the conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dproduct(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dstDev(database, field, criteria)'
    uid: 'excel!Excel.Functions#dstDev:member(1)'
    package: excel!
    fullName: 'dstDev(database, field, criteria)'
    summary: Estimates the standard deviation based on a sample from selected database entries.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dstDev(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dstDevP(database, field, criteria)'
    uid: 'excel!Excel.Functions#dstDevP:member(1)'
    package: excel!
    fullName: 'dstDevP(database, field, criteria)'
    summary: Calculates the standard deviation based on the entire population of selected database entries.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dstDevP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dsum(database, field, criteria)'
    uid: 'excel!Excel.Functions#dsum:member(1)'
    package: excel!
    fullName: 'dsum(database, field, criteria)'
    summary: Adds the numbers in the field (column) of records in the database that match the conditions you specify.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dsum(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'duration(settlement, maturity, coupon, yld, frequency, basis)'
    uid: 'excel!Excel.Functions#duration:member(1)'
    package: excel!
    fullName: 'duration(settlement, maturity, coupon, yld, frequency, basis)'
    summary: Returns the annual duration of a security with periodic interest payments.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        duration(settlement: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        maturity: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, coupon:
        number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, yld: number | string
        | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, frequency: number | string | boolean
        | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, basis?: number | string | boolean |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: settlement
          description: 'Is the security''s settlement date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: maturity
          description: 'Is the security''s maturity date, expressed as a serial date number.'
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: coupon
          description: Is the security's annual coupon rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: yld
          description: Is the security's annual yield.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: frequency
          description: Is the number of coupon payments per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: basis
          description: Is the type of day count basis to use.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dvar(database, field, criteria)'
    uid: 'excel!Excel.Functions#dvar:member(1)'
    package: excel!
    fullName: 'dvar(database, field, criteria)'
    summary: Estimates variance based on a sample from selected database entries.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dvar(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'dvarP(database, field, criteria)'
    uid: 'excel!Excel.Functions#dvarP:member(1)'
    package: excel!
    fullName: 'dvarP(database, field, criteria)'
    summary: Calculates variance based on the entire population of selected database entries.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        dvarP(database: Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, field: number | string |
        Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, criteria: string | Excel.Range |
        Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: database
          description: Is the range of cells that makes up the list or database. A database is a list of related data.
          type: >-
            <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> | <xref
            uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: field
          description: >-
            Is either the label of the column in double quotation marks or a number that represents the column's
            position in the list.
          type: >-
            number | string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface"
            /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: criteria
          description: >-
            Is the range of cells that contains the conditions you specify. The range includes a column label and one
            cell below the label for a condition.
          type: >-
            string | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'ecma_Ceiling(number, significance)'
    uid: 'excel!Excel.Functions#ecma_Ceiling:member(1)'
    package: excel!
    fullName: 'ecma_Ceiling(number, significance)'
    summary: 'Rounds a number up, to the nearest integer or to the nearest multiple of significance.'
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        ecma_Ceiling(number: number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>, significance:
        number | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>): FunctionResult<number>;
      parameters:
        - id: number
          description: Is the value you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: significance
          description: Is the multiple to which you want to round.
          type: >-
            number | <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeReference:interface" /> |
            <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'edate(startDate, months)'
    uid: 'excel!Excel.Functions#edate:member(1)'
    package: excel!
    fullName: 'edate(startDate, months)'
    summary: Returns the serial number of the date that is the indicated number of months before or after the start date.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        edate(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: months
          description: Is the number of months before or after startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'effect(nominalRate, npery)'
    uid: 'excel!Excel.Functions#effect:member(1)'
    package: excel!
    fullName: 'effect(nominalRate, npery)'
    summary: Returns the effective annual interest rate.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        effect(nominalRate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        npery: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: nominalRate
          description: Is the nominal interest rate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: npery
          description: Is the number of compounding periods per year.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'eoMonth(startDate, months)'
    uid: 'excel!Excel.Functions#eoMonth:member(1)'
    package: excel!
    fullName: 'eoMonth(startDate, months)'
    summary: Returns the serial number of the last day of the month before or after a specified number of months.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        eoMonth(startDate: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        months: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: startDate
          description: Is a serial date number that represents the start date.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: months
          description: Is the number of months before or after the startDate.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erf_Precise(X)
    uid: 'excel!Excel.Functions#erf_Precise:member(1)'
    package: excel!
    fullName: erf_Precise(X)
    summary: Returns the error function.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erf_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: X
          description: Is the lower bound for integrating ERF.PRECISE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: 'erf(lowerLimit, upperLimit)'
    uid: 'excel!Excel.Functions#erf:member(1)'
    package: excel!
    fullName: 'erf(lowerLimit, upperLimit)'
    summary: Returns the error function.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erf(lowerLimit: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>,
        upperLimit?: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: lowerLimit
          description: Is the lower bound for integrating ERF.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
        - id: upperLimit
          description: Is the upper bound for integrating ERF.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erfC_Precise(X)
    uid: 'excel!Excel.Functions#erfC_Precise:member(1)'
    package: excel!
    fullName: erfC_Precise(X)
    summary: Returns the complementary error function.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        erfC_Precise(X: number | string | boolean | Excel.Range | Excel.RangeReference | Excel.FunctionResult<any>):
        FunctionResult<number>;
      parameters:
        - id: X
          description: Is the lower bound for integrating ERFC.PRECISE.
          type: >-
            number | string | boolean | <xref uid="excel!Excel.Range:class" /> | <xref
            uid="excel!Excel.RangeReference:interface" /> | <xref uid="excel!Excel.FunctionResult:class" />&lt;any&gt;
      return:
        type: '<xref uid="excel!Excel.FunctionResult:class" />&lt;number&gt;'
        description: ''
  - name: erfC(x)
    uid: 'excel!Excel.Functions#erfC:member(1)'
    package: excel!
    fullName: erfC(x)
    summary: Returns the complementary error function.
    remarks: '\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]'
    