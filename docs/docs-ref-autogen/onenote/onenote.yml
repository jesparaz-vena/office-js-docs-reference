### YamlMime:TSPackage
uid: onenote!
name: onenote
type: package
summary: ''
classes:
  - 'onenote!OneNote.Application:class'
  - 'onenote!OneNote.FloatingInk:class'
  - 'onenote!OneNote.Image:class'
  - 'onenote!OneNote.InkAnalysis:class'
  - 'onenote!OneNote.InkAnalysisLine:class'
  - 'onenote!OneNote.InkAnalysisLineCollection:class'
  - 'onenote!OneNote.InkAnalysisParagraph:class'
  - 'onenote!OneNote.InkAnalysisParagraphCollection:class'
  - 'onenote!OneNote.InkAnalysisWord:class'
  - 'onenote!OneNote.InkAnalysisWordCollection:class'
  - 'onenote!OneNote.InkStroke:class'
  - 'onenote!OneNote.InkStrokeCollection:class'
  - 'onenote!OneNote.InkWord:class'
  - 'onenote!OneNote.InkWordCollection:class'
  - 'onenote!OneNote.Notebook:class'
  - 'onenote!OneNote.NotebookCollection:class'
  - 'onenote!OneNote.NoteTag:class'
  - 'onenote!OneNote.Outline:class'
  - 'onenote!OneNote.Page:class'
  - 'onenote!OneNote.PageCollection:class'
  - 'onenote!OneNote.PageContent:class'
  - 'onenote!OneNote.PageContentCollection:class'
  - 'onenote!OneNote.Paragraph:class'
  - 'onenote!OneNote.ParagraphCollection:class'
  - 'onenote!OneNote.Point:class'
  - 'onenote!OneNote.PointCollection:class'
  - 'onenote!OneNote.RequestContext:class'
  - 'onenote!OneNote.RichText:class'
  - 'onenote!OneNote.Section:class'
  - 'onenote!OneNote.SectionCollection:class'
  - 'onenote!OneNote.SectionGroup:class'
  - 'onenote!OneNote.SectionGroupCollection:class'
  - 'onenote!OneNote.Table:class'
  - 'onenote!OneNote.TableCell:class'
  - 'onenote!OneNote.TableCellCollection:class'
  - 'onenote!OneNote.TableRow:class'
  - 'onenote!OneNote.TableRowCollection:class'
enums:
  - 'onenote!OneNote.ErrorCodes:enum'
  - 'onenote!OneNote.EventType:enum'
  - 'onenote!OneNote.InsertLocation:enum'
  - 'onenote!OneNote.ListType:enum'
  - 'onenote!OneNote.NoteTagStatus:enum'
  - 'onenote!OneNote.NoteTagType:enum'
  - 'onenote!OneNote.NumberType:enum'
  - 'onenote!OneNote.PageContentType:enum'
  - 'onenote!OneNote.ParagraphStyle:enum'
  - 'onenote!OneNote.ParagraphType:enum'
interfaces:
  - 'onenote!OneNote.ImageOcrData:interface'
  - 'onenote!OneNote.InkStrokePointer:interface'  - 'onenote!OneNote.ParagraphInfo:interface'
functions:
  - name: OneNote.run(batch)
    uid: 'onenote!OneNote.run:function(1)'
    package: onenote!
    summary: >-
      Executes a batch script that performs actions on the OneNote object model, using a new request context. When the
      promise is resolved, any tracked objects that were automatically allocated during execution will be released.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'export function run<T>(batch: (context: OneNote.RequestContext) => Promise<T>): Promise<T>;'
      parameters:
        - id: batch
          description: >-
            A function that takes in an OneNote.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). The context parameter facilitates requests to the OneNote application. Since the Office
            add-in and the OneNote application run in two different processes, the request context is required to get
            access to the OneNote object model from the add-in.
          type: '(context: <xref uid="onenote!OneNote.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
      return:
        type: Promise&lt;T&gt;
        description: ''
  - name: 'OneNote.run(object, batch)'
    uid: 'onenote!OneNote.run:function(2)'
    package: onenote!
    summary: >-
      Executes a batch script that performs actions on the OneNote object model, using the request context of a
      previously-created API object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export function run<T>(object: OfficeExtension.ClientObject, batch: (context: OneNote.RequestContext) =>
        Promise<T>): Promise<T>;
      parameters:
        - id: object
          description: >-
            A previously-created API object. The batch will use the same request context as the passed-in object, which
            means that any changes applied to the object will be picked up by "context.sync()".
          type: '<xref uid="office!OfficeExtension.ClientObject:class" />'
        - id: batch
          description: >-
            A function that takes in an OneNote.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). When the promise is resolved, any tracked objects that were automatically allocated
            during execution will be released.
          type: '(context: <xref uid="onenote!OneNote.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
      return:
        type: Promise&lt;T&gt;
        description: ''
  - name: 'OneNote.run(objects, batch)'
    uid: 'onenote!OneNote.run:function(3)'
    package: onenote!
    summary: >-
      Executes a batch script that performs actions on the OneNote object model, using the request context of
      previously-created API objects.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        export function run<T>(objects: OfficeExtension.ClientObject[], batch: (context: OneNote.RequestContext) =>
        Promise<T>): Promise<T>;
      parameters:
        - id: objects
          description: ''
          type: '<xref uid="office!OfficeExtension.ClientObject:class" />[]'
        - id: batch
          description: >-
            A function that takes in an OneNote.RequestContext and returns a promise (typically, just the result of
            "context.sync()"). When the promise is resolved, any tracked objects that were automatically allocated
            during execution will be released.
          type: '(context: <xref uid="onenote!OneNote.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
      return:
        type: Promise&lt;T&gt;
        description: ''
